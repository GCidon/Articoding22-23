%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: End text_en
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en
  m_SharedData: {fileID: 11400000, guid: 84c2393b91541f444811c7fc43a5c75a, type: 2}
  m_Metadata:
    m_Items: []
  m_TableData:
  - m_Id: 22732038144
    m_Localized: Great, to execute your code press the Play button
    m_Metadata:
      m_Items: []
  - m_Id: 119771455488
    m_Localized: You can choose the direction in which the laser moves using the
      dropdowns
    m_Metadata:
      m_Items: []
  - m_Id: 156261900288
    m_Localized: A number different from 0 turns the laser on
    m_Metadata:
      m_Items: []
  - m_Id: 165569060864
    m_Localized: It seems that you understand how the movement cards work
    m_Metadata:
      m_Items: []
  - m_Id: 193448599552
    m_Localized: Great! You've learned the basics to start playing.
    m_Metadata:
      m_Items: []
  - m_Id: 221579796480
    m_Localized: Variables store data such as numbers, letters, colors and more
    m_Metadata:
      m_Items: []
  - m_Id: 283781324800
    m_Localized: Perfect. Now you know that the name of a variable doesn't affect
      its behaviour.
    m_Metadata:
      m_Items: []
  - m_Id: 2849116914331648
    m_Localized: You've created your first variables. Amazing!
    m_Metadata:
      m_Items: []
  - m_Id: 55022188878245888
    m_Localized: Mirrors reflect the laser light. Great!
    m_Metadata:
      m_Items: []
  - m_Id: 55026933776920576
    m_Localized: You can move other objects by using their nametags. Fabulous!
    m_Metadata:
      m_Items: []
  - m_Id: 57970753007124480
    m_Localized: Practicing what you learn is very important, keep it up!
    m_Metadata:
      m_Items: []
  - m_Id: 57972246212902912
    m_Localized: Congratulations! You have completed the tutorial
    m_Metadata:
      m_Items: []
  - m_Id: 57973978699530240
    m_Localized: You can create and use as many variables as needed
    m_Metadata:
      m_Items: []
  - m_Id: 57975019243438080
    m_Localized: With the use of variables you avoid putting integers repeatedly
    m_Metadata:
      m_Items: []
  - m_Id: 57975506189549568
    m_Localized: This level can be completed with only one variable
    m_Metadata:
      m_Items: []
  - m_Id: 57976385655406592
    m_Localized: Giving meaningful names to variables helps to remember what you
      store in them
    m_Metadata:
      m_Items: []
  - m_Id: 57997714316197888
    m_Localized: You are becoming more and more proficient in the use of variables
    m_Metadata:
      m_Items: []
  - m_Id: 58316743115407360
    m_Localized: You seem to have mastered the use of variables...you have completed
      the category!
    m_Metadata:
      m_Items: []
  - m_Id: 77807675334328320
    m_Localized: You can always make use of your variables!
    m_Metadata:
      m_Items: []
  - m_Id: 77807692698746880
    m_Localized: You can also rotate objects using their nametags
    m_Metadata:
      m_Items: []
  - m_Id: 77809525018198016
    m_Localized: Perfect combination of mirrors!
    m_Metadata:
      m_Items: []
  - m_Id: 77809542026100736
    m_Localized: Each laser points to a sphere
    m_Metadata:
      m_Items: []
  - m_Id: 77809555011665920
    m_Localized: Closed doors block the passage of lasers
    m_Metadata:
      m_Items: []
  - m_Id: 77809588293468160
    m_Localized: You can't move if another object is in your way
    m_Metadata:
      m_Items: []
  - m_Id: 77809603330048000
    m_Localized: Again handling multiple lasers. Great!
    m_Metadata:
      m_Items: []
  - m_Id: 77809619033522176
    m_Localized: At "true" the door opens
    m_Metadata:
      m_Items: []
  - m_Id: 77812983632887808
    m_Localized: If the condition is met it will return "true"
    m_Metadata:
      m_Items: []
  - m_Id: 77813074368266240
    m_Localized: And without initial blocks, congratulations!
    m_Metadata:
      m_Items: []
  - m_Id: 77813080710053888
    m_Localized: If you can't see the code well you can use the loupes
    m_Metadata:
      m_Items: []
  - m_Id: 77813082274529280
    m_Localized: Your progress is noticeable, keep it up!
    m_Metadata:
      m_Items: []
  - m_Id: 77813083897724928
    m_Localized: When a tile is occupied it will be "true"
    m_Metadata:
      m_Items: []
  - m_Id: 77813085470588928
    m_Localized: '"or" will return "true" if at least one of the conditions is true'
    m_Metadata:
      m_Items: []
  - m_Id: 77813106341445632
    m_Localized: '"not" reverses the result of the condition'
    m_Metadata:
      m_Items: []
  - m_Id: 77813107645874176
    m_Localized: You seem to have mastered the conditionals
    m_Metadata:
      m_Items: []
  - m_Id: 77813108954497024
    m_Localized: Congratulations! You have completed the Operators category
    m_Metadata:
      m_Items: []
  - m_Id: 77841938687590400
    m_Localized: I wonder know if there is a way to avoid repeating so much code...
    m_Metadata:
      m_Items: []
  - m_Id: 77841940268843008
    m_Localized: You can repeat the code inside the block as many times as you wish
    m_Metadata:
      m_Items: []
  - m_Id: 77841941602631680
    m_Localized: Anything you don't want to be repeated, put it out of the loop
    m_Metadata:
      m_Items: []
  - m_Id: 77842149275205632
    m_Localized: It's important to reduce the amount of code
    m_Metadata:
      m_Items: []
  - m_Id: 77842150080512000
    m_Localized: You can use the variables to change the effect of the loops
    m_Metadata:
      m_Items: []
  - m_Id: 77842150751600640
    m_Localized: Again you can use the same loop for several objects
    m_Metadata:
      m_Items: []
  - m_Id: 77842151720484864
    m_Localized: Objects can be used in several ways
    m_Metadata:
      m_Items: []
  - m_Id: 77842235409432576
    m_Localized: You are getting better and better
    m_Metadata:
      m_Items: []
  - m_Id: 77842251213570048
    m_Localized: You finished another category!
    m_Metadata:
      m_Items: []
  - m_Id: 77856345555599360
    m_Localized: If the condition is "true" it will execute the code inside the block
    m_Metadata:
      m_Items: []
  - m_Id: 77856430309900288
    m_Localized: By using conditionals inside loops you can vary what they execute
    m_Metadata:
      m_Items: []
  - m_Id: 77856443593261056
    m_Localized: It is interesting to combine loops with conditionals
    m_Metadata:
      m_Items: []
  - m_Id: 77856456545271808
    m_Localized: Moving objects in parallel
    m_Metadata:
      m_Items: []
  - m_Id: 77856465542053888
    m_Localized: The "else" block is executed when the condition "if" is "false"
    m_Metadata:
      m_Items: []
  - m_Id: 77856477483237376
    m_Localized: Thanks to conditionals we can adapt the code according to the situation
    m_Metadata:
      m_Items: []
  - m_Id: 77856498320539648
    m_Localized: You sure know how to use conditionals!
    m_Metadata:
      m_Items: []
  - m_Id: 77856520630042624
    m_Localized: Let's review a little more
    m_Metadata:
      m_Items: []
  - m_Id: 77856531577176064
    m_Localized: You only have one category left!
    m_Metadata:
      m_Items: []
  - m_Id: 77938753076330496
    m_Localized: You have completed the game! Do you have any stars left to collect?
    m_Metadata:
      m_Items: []
  - m_Id: 77938664832368640
    m_Localized: When you call a function, the code inside the function is executed
    m_Metadata:
      m_Items: []
  - m_Id: 77938741529411584
    m_Localized: Functions help us to avoid writing repetitive code and generate
      cleanliness
    m_Metadata:
      m_Items: []
  references:
    version: 1
